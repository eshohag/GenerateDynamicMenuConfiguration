@using DynamicMenuMVC.AuthConfig;
@model IEnumerable<MenuConfig>

<div class="navbar navbar-default navbar-fixed-top" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">NavBar</a>
        </div>
        <div class="collapse navbar-collapse">
            <ul class="nav navbar-nav">
                @BuildMenu(Model)
            </ul>
            @Html.Partial("_LoginPartial")
        </div>
        <!--/.nav-collapse -->
    </div>
</div>

@helper BuildMenu(IEnumerable<MenuConfig> menus)
{
    var allMenus = menus.OrderBy(a => a.Id).ToList();
    foreach (var item in allMenus)
    {
        if (item.IsParent == false && item.ParentId == 0)
        {
            <li>
                <a class="" href="@Url.Action(item.Action, item.Controller)"><i class="@item.Icon"></i> @item.DisplayText</a>
            </li>
        }
        else
        {
            <li>
                @if (item.IsParent == true && item.ParentId == 0)
                {
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">@item.DisplayText <b class="caret"></b></a>
                }
                <ul class="dropdown-menu">
                    @foreach (var child in Model.Where(p => p.ParentId == item.Id))
                    {
                        if (child.IsParent == true)
                        {
                            <li>
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">@child.DisplayText <b class="caret caret-right"></b></a>
                                <ul class="dropdown-menu">
                                    @foreach (var child2 in Model.Where(p => p.ParentId == child.Id))
                                    {
                                        <li><a href="@Url.Action(child2.Action, child2.Controller)">@child2.DisplayText</a></li>
                                    }
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="@Url.Action(child.Action, child.Controller)">@child.DisplayText</a>
                            </li>
                        }
                    }
                </ul>
            </li>
        }
    }
}

<script src="~/Scripts/jquery-2.1.3.min.js"></script>
<script>
    $(document).ready(function () {
        $("div ul.navbar-nav>li:first").addClass("active");

        $("ul").on("click", "li", function () {
            var $this = $(this);
            $this.addClass("active");
        });
    });

</script>
